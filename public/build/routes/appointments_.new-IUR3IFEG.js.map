{
  "version": 3,
  "sources": ["../../../app/routes/appointments_.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/appointments_.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/appointments_.new.tsx\");\n  import.meta.hot.lastModified = \"1746612663830.6743\";\n}\n// REMIX HMR END\n\nimport { redirect, json } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { prisma } from \"~/db.server\";\n\n// Server-side: handle form submission\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const customer = formData.get(\"customer\")?.toString() || \"\";\n  const phone = formData.get(\"phone\")?.toString() || \"\";\n  const bikeModel = formData.get(\"bikeModel\")?.toString() || \"\";\n  const service = formData.get(\"service\")?.toString() || \"\";\n  const date = new Date(formData.get(\"date\")?.toString() || \"\");\n  if (!customer || !phone || !bikeModel || !service || isNaN(date.getTime())) {\n    return json({\n      error: \"All fields are required.\"\n    }, {\n      status: 400\n    });\n  }\n  await prisma.appointment.create({\n    data: {\n      customer,\n      phone,\n      bikeModel,\n      service,\n      date\n    }\n  });\n  return redirect(\"/appointments\");\n};\n\n// Optional loader if you want to fetch initial data like services or mechanics\nexport const loader = async () => {\n  return json({});\n};\nexport default function NewAppointment() {\n  _s();\n  const actionData = useActionData();\n  return <div className=\"max-w-xl mx-auto mt-8\">\n            <h1 className=\"text-2xl font-bold mb-4\">New Appointment</h1>\n            {actionData?.error && <div className=\"mb-4 text-red-600\">{actionData.error}</div>}\n            <Form method=\"post\" className=\"space-y-4\">\n                <div>\n                    <label className=\"block font-medium\">Service</label>\n                    <select name=\"service\" className=\"w-full border p-2 rounded\" required>\n                        <option value=\"\">Select a service</option>\n                        <option value=\"Oil Change\">Oil Change</option>\n                        <option value=\"Tire Replacement\">Tire Replacement</option>\n                        <option value=\"General Inspection\">General Inspection</option>\n                        <option value=\"Brake Check\">Brake Check</option>\n                        <option value=\"Chain Adjustment\">Chain Adjustment</option>\n                    </select>\n                </div>\n                <div>\n                    <label className=\"block font-medium\">Customer Name</label>\n                    <input name=\"customer\" type=\"text\" className=\"w-full border p-2 rounded\" required />\n                </div>\n                <div>\n                    <label className=\"block font-medium\">Phone</label>\n                    <input name=\"phone\" type=\"text\" className=\"w-full border p-2 rounded\" required />\n                </div>\n                <div>\n                    <label className=\"block font-medium\">Bike Model</label>\n                    <input name=\"bikeModel\" type=\"text\" className=\"w-full border p-2 rounded\" required />\n                </div>\n                <div>\n                    <label className=\"block font-medium\">Date & Time</label>\n                    <input name=\"date\" type=\"datetime-local\" className=\"w-full border p-2 rounded\" required />\n                </div>\n                <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n                    Create Appointment\n                </button>\n            </Form>\n        </div>;\n}\n_s(NewAppointment, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = NewAppointment;\nvar _c;\n$RefreshReg$(_c, \"NewAppointment\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
